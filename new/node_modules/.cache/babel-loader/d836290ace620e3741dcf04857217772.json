{"ast":null,"code":"import _toConsumableArray from\"/opt/lampp/htdocs/new-enrolled-admin/new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/opt/lampp/htdocs/new-enrolled-admin/new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";var initState={error:null,data:[],category:{}};export var CategoryArticle=function CategoryArticle(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'GET_ARTICLE_CATEGORIES':return _objectSpread(_objectSpread({},state),{},{data:action.payload});case'GET_category':return _objectSpread(_objectSpread({},state),{},{category:action.payload});case'ADD_category':return _objectSpread(_objectSpread({},state),{},{categories:[action.payload].concat(_toConsumableArray(state.categories))});case'DELETE_category':return _objectSpread(_objectSpread({},state),{},{categories:state.categories.filter(function(category){return category.id!==action.payload;})});case'UPDATE_category':return _objectSpread(_objectSpread({},state),{},{categories:state.categories.map(function(category){return category.id===action.payload.id?category=action.payload:category;})});default:{return state;}}};","map":{"version":3,"sources":["/opt/lampp/htdocs/new-enrolled-admin/new/src/redux/_reducers/articles/category/CategoryArticle.js"],"names":["initState","error","data","category","CategoryArticle","state","action","type","payload","categories","filter","id","map"],"mappings":"qUAAA,GAAMA,CAAAA,SAAS,CAAG,CACdC,KAAK,CAAE,IADO,CAEdC,IAAI,CAAG,EAFO,CAGdC,QAAQ,CAAG,EAHG,CAAlB,CAOA,MAAO,IAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAA+B,IAA9BC,CAAAA,KAA8B,2DAAtBL,SAAsB,IAAXM,CAAAA,MAAW,2CAC1D,OAAQA,MAAM,CAACC,IAAf,EACI,IAAK,wBAAL,CACI,sCACGF,KADH,MAEAH,IAAI,CAAEI,MAAM,CAACE,OAFb,GAIJ,IAAK,cAAL,CACE,sCACKH,KADL,MAEEF,QAAQ,CAAGG,MAAM,CAACE,OAFpB,GAIF,IAAK,cAAL,CACI,sCACOH,KADP,MAEII,UAAU,EAAGH,MAAM,CAACE,OAAV,4BAAsBH,KAAK,CAACI,UAA5B,EAFd,GAKJ,IAAK,iBAAL,CACI,sCACOJ,KADP,MAEII,UAAU,CAAEJ,KAAK,CAACI,UAAN,CAAiBC,MAAjB,CAAwB,SAAAP,QAAQ,QAAIA,CAAAA,QAAQ,CAACQ,EAAT,GAAeL,MAAM,CAACE,OAA1B,EAAhC,CAFhB,GAIJ,IAAK,iBAAL,CACE,sCACKH,KADL,MAEEI,UAAU,CAAGJ,KAAK,CAACI,UAAN,CAAiBG,GAAjB,CAAqB,SAAAT,QAAQ,QAAIA,CAAAA,QAAQ,CAACQ,EAAT,GAAgBL,MAAM,CAACE,OAAP,CAAeG,EAA/B,CAAqCR,QAAQ,CAAGG,MAAM,CAACE,OAAvD,CAAkEL,QAAtE,EAA7B,CAFf,GAIF,QAAU,CACN,MAAOE,CAAAA,KAAP,CACH,CA7BL,CA+BH,CAhCM","sourcesContent":["const initState = {\n    error: null,\n    data:  [],\n    category : {}\n    \n}; \n\nexport const CategoryArticle = (state = initState, action) => {\n    switch (action.type) {\n        case 'GET_ARTICLE_CATEGORIES' :\n            return{\n            ...state, \n            data: action.payload,     \n        }\n        case 'GET_category':\n          return {\n            ...state,\n            category : action.payload\n          }\n        case 'ADD_category' :\n            return {\n                ...state,\n                categories: [action.payload, ...state.categories]\n            } \n\n        case 'DELETE_category' :\n            return{\n                ...state,\n                categories: state.categories.filter(category => category.id !==action.payload)\n            }\n        case 'UPDATE_category':\n          return {\n            ...state,\n            categories : state.categories.map(category => category.id === action.payload.id ? (category = action.payload) : category )\n          }\n        default : {\n            return state\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}