{"ast":null,"code":"import _slicedToArray from \"/opt/lampp/htdocs/new-enrolled-admin/new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/opt/lampp/htdocs/new-enrolled-admin/new/src/views/auth/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport axios from \"../../redux/axios\";\nimport { setUserSession } from \"../../Utils/Common\"; // reactstrap components\n\nimport { Button, Card, CardHeader, CardBody, FormGroup, Form, Input, InputGroupAddon, InputGroupText, InputGroup, Row, Col } from \"reactstrap\";\n\nvar Login = function Login(props) {\n  _s();\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      errors = _useForm.errors,\n      handleSubmit = _useForm.handleSubmit;\n\n  var onSubmit = function onSubmit(data) {\n    //console.log(data);\n    handleLogin(data);\n  };\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1]; // handle button click of login form\n\n\n  var handleLogin = function handleLogin(data) {\n    setError(\"\");\n    setLoading(true);\n    axios.post(\"/login\", data).then(function (response) {\n      setLoading(false);\n      setUserSession(response.data.token, response.data.user);\n      props.history.push(\"/admin/index\");\n    }).catch(function (error) {\n      setLoading(false);\n\n      if (error.response.status === 401) {\n        setError(function () {\n          return \"Invalid login details\";\n        });\n      } else setError(\"Something went wrong. Please try again later.\");\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n    lg: \"5\",\n    md: \"7\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"bg-secondary shadow border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    className: \"px-lg-5 py-lg-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center text-muted mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"Or sign in with credentials\")), /*#__PURE__*/React.createElement(Form, {\n    role: \"form\",\n    onSubmit: handleSubmit(onSubmit),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"mb-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    className: \"input-group-alternative\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"prepend\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ni ni-email-83\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Email\",\n    type: \"email\",\n    autoComplete: \"new-email\",\n    name: \"email\",\n    ref: register({\n      required: true\n    }),\n    autoComplete: \"new-password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }), errors.email && /*#__PURE__*/React.createElement(\"small\", {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 23\n    }\n  }, \"E-mail is required\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    className: \"input-group-alternative\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"prepend\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ni ni-lock-circle-open\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Password\",\n    type: \"password\",\n    autoComplete: \"new-password\",\n    name: \"password\",\n    ref: register({\n      required: true\n    }),\n    autoComplete: \"new-password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }), errors.password && /*#__PURE__*/React.createElement(\"small\", {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 23\n    }\n  }, \"Password is required\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }), error && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"small\", {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, error), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-control custom-control-alternative custom-checkbox\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"custom-control-input\",\n    id: \" customCheckLogin\",\n    type: \"checkbox\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"custom-control-label\",\n    htmlFor: \" customCheckLogin\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-muted\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }, \"Remember me\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    className: \"my-4\",\n    color: \"primary\",\n    type: \"submit\",\n    value: loading ? \"Loading...\" : \"Login\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 19\n    }\n  }))))), /*#__PURE__*/React.createElement(Row, {\n    className: \"mt-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: \"text-light\",\n    href: \"#pablo\",\n    onClick: function onClick(e) {\n      return e.preventDefault();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, \"Forgot password?\"))))));\n};\n\n_s(Login, \"YspFZb3ULfphBU2jekJEVF8LcvQ=\", false, function () {\n  return [useForm];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/opt/lampp/htdocs/new-enrolled-admin/new/src/views/auth/Login.js"],"names":["React","useState","useForm","axios","setUserSession","Button","Card","CardHeader","CardBody","FormGroup","Form","Input","InputGroupAddon","InputGroupText","InputGroup","Row","Col","Login","props","register","errors","handleSubmit","onSubmit","data","handleLogin","loading","setLoading","error","setError","post","then","response","token","user","history","push","catch","status","required","email","color","password","e","preventDefault"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\nimport { useForm } from \"react-hook-form\";\nimport axios from \"../../redux/axios\";\nimport { setUserSession } from \"../../Utils/Common\";\n// reactstrap components\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    FormGroup,\n    Form,\n    Input,\n    InputGroupAddon,\n    InputGroupText,\n    InputGroup,\n    Row,\n    Col\n  } from \"reactstrap\";\n  \nconst Login = (props) => {\n  const { register, errors, handleSubmit } = useForm();\n  const onSubmit = (data) => {\n    //console.log(data);\n    handleLogin(data);\n  };\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  // handle button click of login form\n  const handleLogin = (data) => {\n    setError(\"\");\n    setLoading(true);\n    axios\n      .post(\"/login\", data)\n      .then((response) => {\n        setLoading(false);\n        setUserSession(response.data.token, response.data.user);\n        props.history.push(\"/admin/index\");\n      })\n      .catch((error) => {\n        setLoading(false);\n        if (error.response.status === 401) {\n          setError(() => \"Invalid login details\");\n        } else setError(\"Something went wrong. Please try again later.\");\n      });\n  };\n    return (\n        <>\n        <Col lg=\"5\" md=\"7\">\n          <Card className=\"bg-secondary shadow border-0\">\n          \n            <CardBody className=\"px-lg-5 py-lg-5\">\n              <div className=\"text-center text-muted mb-4\">\n                <small>Or sign in with credentials</small>\n              </div>\n              <Form role=\"form\" onSubmit={handleSubmit(onSubmit)}>\n                <FormGroup className=\"mb-3\">\n                  <InputGroup className=\"input-group-alternative\">\n                    <InputGroupAddon addonType=\"prepend\">\n                      <InputGroupText>\n                        <i className=\"ni ni-email-83\" />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input placeholder=\"Email\" type=\"email\" autoComplete=\"new-email\"\n                    name=\"email\" \n                    ref={register({ required: true })}\n                    autoComplete=\"new-password\"\n                    />\n                    <br />\n                    {errors.email && (\n                      <small style={{ color: \"red\" }}>E-mail is required</small>\n                    )}\n                    <br />\n                  </InputGroup>\n                </FormGroup>\n                <FormGroup>\n                  <InputGroup className=\"input-group-alternative\">\n                    <InputGroupAddon addonType=\"prepend\">\n                      <InputGroupText>\n                        <i className=\"ni ni-lock-circle-open\" />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input placeholder=\"Password\" type=\"password\" autoComplete=\"new-password\"\n                    name=\"password\"\n                    ref={register({ required: true })}\n                    autoComplete=\"new-password\"\n                    />\n                    <br />\n                    {errors.password && (\n                      <small style={{ color: \"red\" }}>Password is required</small>\n                    )}\n                    <br />   \n                    {error && (\n                      <>\n                        <small style={{ color: \"red\" }}>{error}</small>\n                        <br />\n                      </>\n                    )}\n                    <br />\n                  </InputGroup>\n                </FormGroup>\n                <div className=\"custom-control custom-control-alternative custom-checkbox\">\n                  <input\n                    className=\"custom-control-input\"\n                    id=\" customCheckLogin\"\n                    type=\"checkbox\"\n                  />\n                  <label\n                    className=\"custom-control-label\"\n                    htmlFor=\" customCheckLogin\"\n                  >\n                    <span className=\"text-muted\">Remember me</span>\n                  </label>\n                </div>\n                <div className=\"text-center\">\n                  <Input className=\"my-4\" color=\"primary\" type=\"submit\" value={loading ? \"Loading...\" : \"Login\"} />\n                   \n                </div>\n              </Form>\n            </CardBody>\n          </Card>\n          <Row className=\"mt-3\">\n            <Col xs=\"6\">\n              <a\n                className=\"text-light\"\n                href=\"#pablo\"\n                onClick={e => e.preventDefault()}\n              >\n                <small>Forgot password?</small>\n              </a>\n            </Col>\n          \n          </Row>\n        </Col>\n      </>\n    )\n}\n\nexport default Login\n"]},"metadata":{},"sourceType":"module"}